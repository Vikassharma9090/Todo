{"version":3,"sources":["Components/Header.jsx","Components/AddTodo.jsx","Components/EmptyTodo.jsx","Components/Todo.jsx","Components/Todos.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","useColorMode","colorMode","toggleColorMode","display","p","bgGradient","bgClip","position","right","icon","isRound","mr","onClick","AddTodo","todos","setTodos","useState","todo","setTodo","toast","useToast","placeholder","varient","value","onChange","e","target","console","log","handleChange","colorScheme","px","title","status","duration","isClosable","newTodo","id","nanoid","text","addTodo","EmptyTodo","bg","color","borderRadius","Todo","deleteTodo","width","ml","Todos","borderWidth","length","alignItems","mt","divider","map","App","JSON","parse","localStorage","getItem","SetTodos","useEffect","setItem","stringify","w","maxW","base","sm","lg","xl","updatedTodo","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.94ddcdae.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Box,Heading,IconButton,useColorMode} from '@chakra-ui/react'\r\nimport {FaMoon,FaSun} from 'react-icons/fa';\r\n\r\nconst Header = () => {\r\n    const { colorMode, toggleColorMode } = useColorMode()\r\n    return (\r\n        <Box display='flex' p={8}>\r\n            <Heading\r\n            bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\r\n            bgClip='text'\r\n            >Todo App\r\n            </Heading>\r\n            <IconButton position='absolute'\r\n            right='40'\r\n          icon={colorMode === 'light' ? <FaSun/>:<FaMoon/>}\r\n          isRound={true}\r\n          mr={9}\r\n          onClick={toggleColorMode}\r\n        />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { HStack, Input,Button,useToast} from '@chakra-ui/react'\r\nimport  { useState } from 'react'\r\nimport {nanoid} from 'nanoid';\r\n\r\nconst AddTodo = ({todos,setTodos}) => {\r\n    const[todo,setTodo]=useState('');\r\n    const toast =useToast();\r\n\r\n\r\n    const handleChange=(e)=>{\r\n        setTodo(e.target.value);\r\n        console.log(todo);\r\n    }\r\n\r\n    const addTodo=()=>{\r\n     //off blank todo.\r\n    //   if(!todo) return;\r\n    // off blank todo and show toast\r\n     \r\n    if(!todo)\r\n    {\r\n        toast({\r\n             title:'Filled the Todo Item',\r\n             status:'error',\r\n             duration:'3000',\r\n             isClosable:true\r\n        })\r\n    }\r\n  \r\n\r\n    const newTodo={\r\n            id:nanoid(),\r\n            text:todo\r\n        }\r\n        setTodos([...todos,newTodo])\r\n        setTodo('');\r\n    }\r\n    return (\r\n        <HStack>\r\n            <Input\r\n            placeholder='add todo item'\r\n            varient='filled'\r\n            value={todo}\r\n            onChange={(e)=>{handleChange(e)}}\r\n\r\n            />\r\n          <Button\r\n           colorScheme='blue'\r\n           px={8}\r\n           onClick={()=>addTodo()}\r\n           >Add Item\r\n          </Button>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default AddTodo\r\n","import { Text } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nconst EmptyTodo = () => {\r\n    return (\r\n        <>\r\n           <Text\r\n              p={5}\r\n              bg='blue.400'\r\n              color='white'\r\n              borderRadius={10}\r\n              >\r\n                Write Something...\r\n            </Text> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmptyTodo\r\n","import { HStack, Text,IconButton} from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport {FaTrash} from 'react-icons/fa';\r\n\r\nconst Todo = ({todo,deleteTodo}) => {\r\n    return (\r\n        <HStack p={2}>\r\n            <Text width=\"100%\"\r\n            ml='4'\r\n            \r\n            >{todo.text}</Text>\r\n            <IconButton\r\n                \r\n                icon={<FaTrash/>}\r\n                isRound={true}\r\n                onClick={()=>deleteTodo(todo.id)}\r\n            />\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n\r\n","import { StackDivider, VStack } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport EmptyTodo from './EmptyTodo'\r\n\r\n\r\n//componets \r\nimport Todo from './Todo' \r\n\r\nconst Todos = ({todos,deleteTodo}) => {\r\n\r\n  \r\n\r\n    return (\r\n        <VStack\r\n           borderWidth={todos.length>0?'1px':'none'}\r\n           alignItems='stretch'\r\n           mt={8}\r\n           divider={<StackDivider/>}>\r\n           {\r\n            todos.length > 0 ? todos.map(todo=>(\r\n                <Todo todo={todo} deleteTodo={deleteTodo} />\r\n            )):<EmptyTodo/>\r\n           }\r\n        </VStack>\r\n    )\r\n}\r\n\r\nexport default Todos;\r\n","import {useState,useEffect} from 'react';\nimport './App.css';\nimport Header from './Components/Header'\nimport {VStack,Box} from '@chakra-ui/react';\nimport AddTodo from './Components/AddTodo';\nimport Todos from './Components/Todos';\n\n// const intanialtodos=[\n//         {\n//             id:12,\n//             text:'Write Someting '\n//         },\n//         {\n//             id:13,\n//             text:'as daily Routine'\n//         }\n//     ]\n\nfunction App() {\n  const[todos,SetTodos]=useState(()=> JSON.parse(localStorage.getItem('todos')) || []);\n\n    useEffect(()=>{\n      localStorage.setItem('todos',JSON.stringify(todos))\n    },[todos])\n\n   const deleteTodo =(id)=>{\n     const updatedTodo= todos.filter(todo=>todo.id !==id);\n      //  console.log(updatedTodo);\n       SetTodos(updatedTodo)\n       \n   }\n  return (\n    <VStack >\n     <Header/>\n     <Box \n     w='100%'\n     maxW={{base:'80vw',sm:'80vw',lg:'50vw',xl:'40vw'}}\n     >\n     <AddTodo todos={todos} setTodos={SetTodos}/>\n     <Todos todos={todos} deleteTodo={deleteTodo} />\n     </Box>\n    </VStack>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider,ColorModeScript  } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <React.StrictMode>\n  <ChakraProvider>\n  <ColorModeScript  initialColorMode=\"light\"/>\n  <App />\n  </ChakraProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}